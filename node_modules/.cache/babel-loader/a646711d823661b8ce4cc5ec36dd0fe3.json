{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\visha\\\\Desktop\\\\optum-React\\\\amazon-challenge\\\\amazon-clone\\\\src\\\\Payment.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Payment.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./reducer\";\nimport axios from \"./axios\";\nimport { db } from \"./firebase\";\n\nfunction Payment() {\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: \"post\",\n        // Stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n  console.log(\"THE SECRET IS >>>\", clientSecret);\n  console.log(\"ðŸ‘±\", user);\n\n  const handleSubmit = async event => {\n    // do all the fancy stripe stuff....\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      // paymentIntent = payment confirmation\n      db.collection(\"users\").doc(user === null || user === void 0 ? void 0 : user.uid).collection(\"orders\").doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: \"EMPTY_BASKET\"\n      });\n      history.replace(\"/orders\");\n    });\n  };\n\n  const handleChange = event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Checkout (\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, basket === null || basket === void 0 ? void 0 : basket.length, \" items \"), \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Delivery Address\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, user === null || user === void 0 ? void 0 : user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"12300 React Ln\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Eden Prairie, MN\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Review items and Delivery\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, basket.map(item => /*#__PURE__*/React.createElement(CheckoutProduct, {\n    id: item.id,\n    title: item.title,\n    image: item.image,\n    price: item.price,\n    rating: item.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Payment Method\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_priceContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyFormat, {\n    renderText: value => /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 42\n      }\n    }, \"Order Total: \", value),\n    decimalScale: 2,\n    value: getBasketTotal(basket),\n    displayType: \"text\",\n    thousandSeparator: true,\n    prefix: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: processing || disabled || succeeded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 39\n    }\n  }, \"Processing\") : \"Buy Now\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, error))))));\n}\n\nexport default Payment;","map":{"version":3,"sources":["C:/Users/visha/Desktop/optum-React/amazon-challenge/amazon-clone/src/Payment.js"],"names":["React","useState","useEffect","useStateValue","CheckoutProduct","Link","useHistory","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","axios","db","Payment","basket","user","dispatch","history","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","response","method","url","data","console","log","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","handleChange","empty","message","length","email","map","item","title","image","price","rating","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from \"./axios\";\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // generate the special stripe secret which allows us to charge a customer\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        // Stripe expects the total in a currencies subunits\r\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n\r\n    getClientSecret();\r\n  }, [basket]);\r\n\r\n  console.log(\"THE SECRET IS >>>\", clientSecret);\r\n  console.log(\"ðŸ‘±\", user);\r\n\r\n  const handleSubmit = async (event) => {\r\n    // do all the fancy stripe stuff....\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        // paymentIntent = payment confirmation\r\n\r\n        db.collection(\"users\")\r\n          .doc(user?.uid)\r\n          .collection(\"orders\")\r\n          .doc(paymentIntent.id)\r\n          .set({\r\n            basket: basket,\r\n            amount: paymentIntent.amount,\r\n            created: paymentIntent.created,\r\n          });\r\n\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n\r\n        dispatch({\r\n          type: \"EMPTY_BASKET\",\r\n        });\r\n\r\n        history.replace(\"/orders\");\r\n      });\r\n  };\r\n  const handleChange = (event) => {\r\n    // Listen for changes in the CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <div className=\"payment_container\">\r\n        <h1>\r\n          Checkout (<Link to=\"/checkout\">{basket?.length} items </Link>)\r\n        </h1>\r\n\r\n        {/* Payment section - delivery address */}\r\n        <div className=\"payment_section\">\r\n          <div className=\"payment_title\">\r\n            <h3>Delivery Address</h3>\r\n          </div>\r\n          <div className=\"payment_address\">\r\n            <p>{user?.email}</p>\r\n            <p>12300 React Ln</p>\r\n            <p>Eden Prairie, MN</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Review Items */}\r\n        <div className=\"payment_section\">\r\n          <div className=\"payment_title\">\r\n            <h3>Review items and Delivery</h3>\r\n          </div>\r\n          <div className=\"payment_items\">\r\n            {basket.map((item) => (\r\n              <CheckoutProduct\r\n                id={item.id}\r\n                title={item.title}\r\n                image={item.image}\r\n                price={item.price}\r\n                rating={item.rating}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment section - Payment Method */}\r\n        <div className=\"payment_section\">\r\n          <div className=\"payment_title\">\r\n            <h3>Payment Method</h3>\r\n          </div>\r\n          <div className=\"payment_details\">\r\n            {/* STripe magic will go here */}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <CardElement onChange={handleChange} />\r\n              <div className=\"payment_priceContainer\">\r\n                <CurrencyFormat\r\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                  decimalScale={2}\r\n                  value={getBasketTotal(basket)}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n                <button disabled={processing || disabled || succeeded}>\r\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                </button>\r\n              </div>\r\n\r\n              {/* Errors */}\r\n              {error && <div>{error}</div>}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n"]},"metadata":{},"sourceType":"module"}